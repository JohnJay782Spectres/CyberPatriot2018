Cisco Reference 
Description: Basic information on using Router/Switch command line interface (CLI)
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swcli.html

~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting up a Hostname |
~~~~~~~~~~~~~~~~~~~~~~~~~
Description:
Source:
Switch>enable
Switch#configure terminal
Switch(config)#hostname ParkRouter
ParkSwitch(config)#

~~~~~~~~~~~~~~~~~~
| Check Settings |
~~~~~~~~~~~~~~~~~~
Description:
Source:
ParkSwitch#show running-config

~~~~~~~~~~~~~~~~~~~~~~~
| Save Cisco Settings |
~~~~~~~~~~~~~~~~~~~~~~~
Description:
Source:
ParkSwitch#copy start run
OR the full command is ParkRouter# copy startup-config running-config

~~~~~~~~~~~~~~~~~~~~~
| Enabling Password |
~~~~~~~~~~~~~~~~~~~~~
Description: The password will be stored in plaintext
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swauthen.html#wp1154063
ParkSwitch>enable
ParkSwitch#configure terminal
ParkSwitch(config)#enable password Cisco123

~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Enabling Secret Password |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Description: The password will be stored as a hash
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swauthen.html#wp1154063
ParkSwitch>enable
ParkSwitch#configure terminal
ParkSwitch(config)#enable secret Cisco123

To see if the password is enabled correctly run the command:
ParkSwitch#show running-config

~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting up IP Addresses |
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Description:
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swipaddr.html#wp1037806
ParkSwitch#confiure terminal
ParkSwitch(config)#interface vlan XX
ParkSwitch(config-if)#ip address <ip address> <subnet mask>
ParkSwitch(config-if)#exit
ParkSwitch(config)#ip default-gateway <ip address>
ParkSwitch(config)#end
ParkSwitch#show interfaces vlan XX    !--Verify the configured IP address
ParkSwitch#show ip redirects          !--Verify the configured default gateway

~~~~~~~~~~~~~~~~~~~~
| Setting up VLANs |
~~~~~~~~~~~~~~~~~~~~
Description:
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swvlan.html#wp1111866
ParkSwitch>enable
Password:
ParkSwitch#configure terminal
ParkSwitch(config)#vlan XX
ParkSwitch(config-vlan)#name Marketing
ParkSwitch(config-vlan)#end

----Assigning a VLAN to a port----
ParkSwitch(config)#interface fa0/XX
ParkSwitch(config-if)#switchport mode access
ParkSwitch(config-if)#switchport access vlan XX

----Display all VLANs----
ParkSwitchr#show vlan

~~~~~~~~~~~~~~~~~~~~~
| InterVLAN Routing |
~~~~~~~~~~~~~~~~~~~~~
Description: InterVLAN routing is how computers on different VLANs can communicate with each other.
Source: https://www.cisco.com/c/en/us/support/docs/lan-switching/inter-vlan-routing/41860-howto-L3-intervlanrouting.html
Source: (VTP) https://www.cisco.com/c/en/us/support/docs/lan-switching/vtp/10558-21.html
Source: (VTP) https://www.cisco.com/c/en/us/support/docs/lan-switching/vtp/98154-conf-vlan.html
ParkSwitch>enable
Password:
ParkSwitch#configure terminal
ParkSwtich(config)#ip routing
ParkSwitch(config)#vlan database
ParkSwitch(vlan)#vlan XX
ParkSwitch(vlan)#vlan XY
ParkSwitch(vlan)#vlan XZ
ParkSwitch(vlan)#exit
ParkSwitch(config)#interface vlan XX
ParkSwitch(config-if)#ip address 10.0.XX.1 255.255.255.0
ParkSwitch(config-if)#no shutdown
ParkSwitch(config-if)#exit
ParkSwitch(config)#interface vlan XY
ParkSwitch(config-if)#ip address 10.0.XY.1 255.255.255.0
ParkSwitch(config-if)#no shutdown
ParkSwitch(config-if)#exit
ParkSwitch(config)#interface vlan XZ
ParkSwitch(config-if)#ip address 10.0.XZ.1 255.255.255.0
ParkSwitch(config-if)#no shutdown
ParkSwitch(config-if)#exit
ParkSwitch(config)#interface FastEthernet 0/1
ParkSwitch(config-if)#no switchport
ParkSwitch(config-if)#ip address <default gateway> 255.255.255.0
ParkSwitch(config-if)#no shutdown
ParkSwitch(config-if)#exit
ParkSwitch(config)#ip route 0.0.0.0 0.0.0.0 <default gateway>
ParkSwitch(config)#exit

~~~~~~~~~~~~~~~~~~~~~~~~~~
| Trunking/Encapsulation |
~~~~~~~~~~~~~~~~~~~~~~~~~~
Description: Trunking is a way for 2 or more switches to pass long data on different vlans without having seperate dedicated lines(interfaces) for each vlan. The data on each vlan still stays inside its assigned vlan. 
Description: https://www.youtube.com/watch?v=Wi48h6UFhlo
Source: https://www.cisco.com/c/en/us/support/docs/switches/catalyst-6000-series-switches/10599-88.html
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swvlan.html#wp1200245
ParkSwitch>enable
Password:
ParkSwitch#configure terminal
ParkSwitch(config)#interface fa0/XX
ParkSwitch(config-if)#switchport trunk encapsulation dot1q
ParkSwitch(config-if)#switchport mode trunk
ParkSwitch(config-if)#end

----Defining the Allowed VLANs on a Trunk----
ParkSwitch(config-if)#switchport trunk allowed vlan add 10
OR
ParkSwitch(config-if)#switchport trunk allowed vlan remove 20

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting up Telnet with a password |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Description: Telnet is an UNSECURE way to access a Router/Switch
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swauthen.html#wp1020691
ParkSwitch>enable
ParkSwitch#configure terminal
ParkSwitch(config)#line vty 0 4
ParkSwitch(config-line)# transport input telnet
ParkSwitch(config)#password Cisco123

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Configuring Username and Password Pairs |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Description:
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swauthen.html#wp1046352
ParkSwitch#configure terminal
ParkSwitch(config)#username JohnJay privilege 15 password 7 Cisco123
ParkSwitch(config)#line vty 0 4
ParkSwitch(config)#login local
ParkSwitch(config)#end

~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting up Secure Shell |
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Description:
Source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst3560/software/release/12-2_25_sea/configuration/guide/3560scg/swauthen.html#wp1227177
ParkSwitch#configure terminal
ParkSwitch(config)#line vty 0 4
ParkSwitch(config-line)# transport input ssh

----To disable all forms of remote access (Telnet and SSH)----
ParkSwitch(config)# line vty 0 4
ParkSwitch(config-line)# transport input none

~~~~~~~~
| OSPF |
~~~~~~~~
Description:
Source: https://www.cisco.com/c/en/us/td/docs/security/asa/asa82/configuration/guide/config/route_ospf.html
~~~~~~~~~
| Extra | 
~~~~~~~~
ParkSwitch# show interfaces status #shows the status of all interfaces
ParkSwitch# show module all # shows the status of loaded modules
source: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst4500/12-2/31sg/configuration/guide/conf/connect.pdf
( also has how to telnet and MAC addresing on it)

~~~~~~~~~~~~~~~~~
| Default Gateway|
~~~~~~~~~~~~~~~~~
ParkSwitch(config) ip default-gateway 192.168.1.0

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|assinging ports and ranges to vlans|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkSwitch(config-if) switchport access vlan [vlan-id| none]
 source: https://www.cisco.com/c/en/us/support/docs/smb/switches/cisco-small-business-300-series-managed-switches/smb5653-configure-port-to-vlan-interface-settings-on-a-switch-throug.html
 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 | assigning encapsulation to a sub-if menu|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ParkSwith(config-subif) encapsulation dot1Q 1 native (sets it to encapsulation dot1q and VLANID1:Native)
 ParkSwith(config-subif) encapsulation dot1Q 2 (sets it to encapsulation dot1q and VLANID: 2)
 Resource: https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst9500/software/release/16-10/configuration_guide/vlan/b_1610_vlan_9500_cg/configuring_layer_3_subinterfaces.pdf
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 |Configurating multiple ports at once|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ParkSwitch(config) interface range Fa1/5-8
 ~~~~~~~~~~~~~~~~~~~~~~~
 |Acess Group command|
 ~~~~~~~~~~~~~~~~~~~~~~
ParkSwitch(config-if) ip access-group 101 in
~~~~~~~~~~~~~~~~~~~~~~
| Configuring RIP |
~~~~~~~~~~~~~~~~~~~~
ParkRouter(config) ip route 0.0.0.0 0.0.0.0 192.168.14.4 # adds a route to be broadcasted using RIP
        # ip router 0.0.0.0 0.0.0.0 <ip to be forwarded to, usually ISP or server>
ParkRouter(config)router rip  # enables the RIP protocol and interfaces to it
ParkRouter(config-router ) no auto-summary # may or may not be needed
ParkRouter(config-router) version 2 # uses the version 2 of RIP 
ParkRouter(config-router) network 10.1.1.0
https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_rip/configuration/15-mt/irr-15-mt-book/irr-cfg-info-prot.html#GUID-E2AED23B-0B10-4049-9D23-CD29900173D2
https://networklessons.com/cisco/ccna-routing-switching-icnd1-100-105/rip-default-route
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting Default route for RIP|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-router)default-information originate
~~~~~~~~~~~~~~~~~~~~~
| Pinging Server|
~~~~~~~~~~~~~~~~~
ParkRouter# ping 8.8.8.8 # shows wether the packets get there
~~~~~~~~~~~~~~~~~~~~~~
| restricting vlans on a trunked port|
~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-if)#switchport trunk allowed vlan 1,10,20
~~~~~~~~~~~~~~~~~~~~~~~~~~
|   Enabling OSPF |
~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config)#router ospf process_id 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
|  Defining an interface for OSPF  |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-router)network ip-address wildcard-mask area area-id
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting an OSPF router ID  |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-router)router-id routerID
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting OSPF default route |
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-router) default-information originate (always)
* always keyword sometimes not used
Note about always keyword: The always keyword includes the following exception:
when a route map is used. When a route map is used, the origination 
of the default route by OSPF is not bound to the existence of a default route in the 
routing table.
~~~~~~~~~~~~~~~~~~~~~~~~
| Define Range for OSPF route summarization
~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-router)area area-id range ip-address mask
~~~~~~~~~~~~~~~~~~~~~~~~~~
 | OSPF preference of route |
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Increase cost of one interface in ospf compared to one another in
 order for OSPF to prefer that route
~~~~~~~~~~~~~~~~~~
| OSPF show commands|
~~~~~~~~~~~~~~~~~~~~
Router# show ip ospf database // shows the OSPF database and its routes it has saved
Router# show ip ospf neighbor // shows the direct neigbor of OSPF
More found at : https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_ospf/command/iro-cr-book/ospf-s1.html


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Enabling a Layer 2 Port to Layer 3 (for setting an ip address)|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-if) no switchport
# enables layer 3 functionality on a layer 2 port if layer 3 is supported.
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 | setting static routes |
 ~~~~~~~~~~~~~~~~~~~~~~
 ParkRouter(config)ip routing  // enables ip routing
 ParkRouter(config) ip route prefix mask ip-address
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 | Check the routing table of a router|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ParkRouter$ show ip route
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 | Cisco Discovery Protocol(CDP)|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ParkRouter(config-if) cdp enable // enables CDP protocol on a given interface
 // EXTREMELY usefull for knkowing what is connected on an interface or multiple interfaces
 ParkRouter# show cdp neighbors // shows the neighbors that are using cdp
 ParkRouter# show cdp interface // shows wihich interfaces are using cdp
 more at : https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/cdp/configuration/15-mt/cdp-15-mt-book/nm-cdp-discover.html
~~~~~~~~~~~~~~~~~~~~
| debugging ping |
~~~~~~~~~~~~~~~~~~
ParkRouter#debug ip packet detail
~~~~~~~~~~~~~~~~
| Access lists|
~~~~~~~~~~~~~~~
if its a standard ACL (number: 0-99 or 1300-1999) access list:
ParkRouter(config) access-list [ACL number] [permir or deny] [source ip and mask] [destination ip and  wildcard mask]
if its is an extended ACL(number 100-199 or 2000-2699):
  ParkRouter(config) access-list [ACL number] [permir or deny] [protocol(like ip or udp, tcp, etc)] [source ip and wildcard mask] [destination ip and wildcard mask] eq [Upper-level protocol, such as telnet (optional), or port]
useful ACL commands:
ParkRouter(config) access-list 102 deny ip any any // or ...permit any any
ParkRouter(config) no access-list [accesslist number] // deletes that acces liost number
ParkRouter(config) access-list 100 deny tcp 10.3.0.0 0.0.255.255 host 10.1.0.1 // denies tcp traffic on port 23 from the 10.3.0.0/16 network to the 10.1.0.1 destination 
            * in the above command host stands for a wildcard mask of 0.0.0.0 (means match the exact IP for the rule to apply, normal subnet would be: 255.255.255.255)
Router(config) access-list ? // shows the access list available
Router# show access-list // shows the configured access lists
Notes:
  Acccess Lists have an implicit deny, hence, they need a permit statement to allow any traffic thru 
  They apply rules from top to bottom, so put stricter rules at top.
more : http://routeswitchlabtips.com/routing-and-switching/how-to-add-delete-and-renumber-a-cisco-access-control-list-acl/
// denies all the ip's on  a given access list, can be modified to suit your needs, just pay attention the "any any" portion
The "remark" keyword adds a comment to the ACL, 
  ex: access-list 10 remark Block Topeka Office
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Aplying Access list to an interface
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ParkRouter(config-if) ip access-group [acess-list number] [in or out] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Object Groups
~~~~~~~~~~~~~~~~~~~~~~~~~
Router(config)object-group network ACCOUNTING // creates the object group
Router(config-network-group) 192.168.10.0 255.255.255.0 // adds network to group
Router(config-network-group) 192.168.20.0 255.255.255.0 // adds another network to group
Router(config-netowkr-group) host 192.168.30.3 (adds a single IP to the network, rmemeber host= wildcard:0.0.0.0, subnet=255.255.255.255)
Router(config-network-group)access-list 100 permit ip object-group ACCOUNTING any // Use it in place of the network or service in the access-control entry
// used to control multiple networks over 1 access list
// ACL can also be controlled by Time Ranges... NISD used this in 2020
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Named Access Lists
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Router(config)ip access-list extended BLOCK SALES  // creates a named ACL with name BLOCK BLOCK SALES
Router(config-ext-nacl) deny ip 192.168.0 0.0.0.255 any // adds a rule to it
Router(config-ext-nacl) permit ip any any // adds a rule to it
Router(config-ext-nacl) int g0/0 interfaces with g0/0
Router(config-if) ip access-group BLOCK_SALES out // applies the named ACL to interface
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Network Address Translation (NAT)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* This section will be structurd as Notes
* Convertion goes both ways
* interfaces have special names(relevant for test and for imaggining the concept) depending on the relationship and what router you are

NAt has multiple methods of being arranged:
1) Static 1 to 1:
  *translates one public IP to one private address
  instructions:
  *Outward facing address: 209.165.100.29 (public IP)
  *Inward facing address: 10.0.0.240 ( a server)
  router(config) int g0/0 // interfaces with g0/0. which in this cases faces the WAN
  router(config-if) ip nat out // tells NAT that this is the outward facing interface ( facing the WAN)
  router(config-if) int g0/1 // interfaces with the LAN network ( your "inside" networ)
  router(config-if) ip nat inside // tells NAT that this interfaces faces your LAN network
  router(config-if) ip nat inside source static 10.0.0.240 209.165.100.29 //this tells the router to translate from 10.0.0.240 private IP to the 209.165.100.29 Public IP
  // the above command finished the 1 to 1 translation, since it goes both ways
2) Port Address Translation 1 to 1 Port 80:
  *translates one public IP address to one private address based on a port ( in this case it is 80)
  * also a 1 to 1 translation, but only happens if you contact the public IP address on the specified port (port 80 in this case )
  instructions:
  *Outward facing address: 209.165.100.30 (public IP)
  *Inward facing address: 10.0.0.250 (a web server)
  router(config) int g0/0 // interfaces with g0/0. which in this cases faces the WAN
  router(config-if) ip nat outside // tells NAT that this is the outward facing interface ( facing the WAN)
  router(config-if) int g0/1 // interfaces with the LAN network ( your "inside" networ)
  router(config-if) ip nat inside // tells NAT that this interfaces faces your LAN network
    * the above commands are if you have not already set up outside/inside connections
  router(config) ip nat inside source static tcp 10.0.0.250 80 209.165.100.30 80 //translates the private 10.0.0.250 port 80 to the 209.165.100.30 port 80 public ip using trp protocol
  // the above command finished the port address translation based on port 80 with the tcp protocol  
3) NAT Overload Translation(PAT):
  * Most common form of translation, commonly found in home routers
  * Takes a public address and it gets translated to all the private addresses on the private network
  * also converts all private addresses to one public address
  instuctions:
  

4) Dynamic Translation (NAT Pool):
  * When you have multiple Public addresses and they get converted to a bunch of private addresses
  * This type of NAT was used in the 2020 Cisco State competition
  instructions:




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Setting up a custom DNS Server IP on routers|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Router(config) ip name-server [ip of DNS]
Optional: ip domain-lookup // enables the lookup for domains using the given DNS Ip ( check)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Showing the Ip address of interfaces|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Router# show ip int brief // shows the interfaces and their IP's, brief can be redacted for more details

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
| Random Interesting Command (Miscallenous)|
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Router(config) do show access-list // shows the access lists as if from  off config mode (maybe the "do" keyword?)
 Note:The "do" keyword makes the command as if from the "Router#"
 menu(terminal) menu, hence any command that works in such menu
 will work in config mode if preceeded by the "do" command.





~~~~~~~~~~~~~~~~~
| Clearing OSPF |
~~~~~~~~~~~~~~~~~
ParkRouter(config) clear ospf pid












----Jesse's--------
secret password :
enable
enable secret
privilage
service password-encryption
ip address:
Step 2	ip address ip-address mask Example: Router(config-int)# ip address 192.168.12.2 255.255.255.0 Router(config-int)#
Step 3	no shutdown Example: Router(config-int)# no shutdown Router(config-int)#
Step 4	exit Example: Router(config-int)# exit Router(config)#
